---
# tasks file for modx
#
# call ansible with variable aicura_dump defined to upload aicura.zip file and the SQL dump defined in aicura_dump
# aicura.zip will be extracted into the base directory; Core-paths in config files will be adpated and cache cleared
# SQL dump defined in aicura_dump will be loaded into modX database.
# E.g. setting variable through command line: -e "aicura_dump=aicura_2018-09-27_14-16-24.sql"
- name: Stop php-fpm Service
  service: name=php7.0-fpm state=stopped
  changed_when: false

- name: Copy php-fpm pool configuration file for modx
  template: src=modx.pool.conf dest=/etc/php/7.0/fpm/pool.d/modx.conf

- name: Add group "modx"
  group: name=modx

- name: Add user "modx"
  user: name=modx group=modx home=/home/modx/ shell=/bin/false

- name: Create modx database
  mysql_db: name={{ modx_database_name }} state=present

- name: Create modx database user
  mysql_user: name={{ modx_database_user }} password={{ modx_database_password }} priv={{ modx_database_name }}.*:ALL host='localhost' state=present

- name: Install dependencies
  apt: pkg={{ item }} state=present
  with_items:
    - unzip
    - php-cli
    - php-json
    - php-gd
    - php-imagick
    - php-mbstring

- name: Create installation directory
  file: 
    path: "{{ modx_install_dir }}"
    state: directory
    owner: modx
    group: modx

- name: Get MODX zipfile
  get_url: url={{modx_download_url}} dest={{ modx_install_dir }}/modx-{{ modx_version }}.zip
  register: got_modx

- name: Unzip MODX
  command: unzip -o modx-{{ modx_version }}.zip
  when: got_modx.changed
  args:
    chdir: "{{ modx_install_dir }}"
    creates: "{{ modx_install_dir }}/modx-{{ modx_version }}"

- name: Configure MODX installation
  template: src=config.xml dest={{ modx_install_dir }}/modx-{{ modx_version }}/setup/config.xml
  when: got_modx.changed

- name: Touch blank config file
  file: path={{ modx_install_dir }}/modx-{{ modx_version }}/core/config/config.inc.php state=touch
  when: got_modx.changed

- name: Install MODX
  command: php ./index.php --installmode=new
  when: got_modx.changed
  args:
    chdir: "{{ modx_install_dir }}/modx-{{ modx_version }}/setup/"

- name: Unpacking aicura modx package from agency
  unarchive: 
    src: aicura.zip
    dest: "{{ modx_install_dir }}/modx-{{ modx_version }}"
    owner: modx
    group: modx
  when: aicura_dump is defined

# Copy database dump file to remote host and restore it to database '{{ modx_database_name }}'
- name: Copy aicura database dump file
  copy:
    src: "{{ aicura_dump }}"
    dest: /tmp
  when: aicura_dump is defined
    
- name: Restore aicura database dump
  mysql_db:
    name: "{{ modx_database_name }}"
    state: import
    target: "/tmp/{{ aicura_dump }}"    
  when: aicura_dump is defined

- name: Clear cache after restoring dump
  file:
    path: "{{ modx_install_dir }}/modx-{{ modx_version }}/core/cache"
    state: absent
  when: aicura_dump is defined

- name: Adapting core path in modx config files
  replace:
    path: "{{ item }}"
    regexp: "define\\s*\\('MODX_CORE_PATH'\\,\\s*'([^']*)'\\);"
    replace: "define('MODX_CORE_PATH', '{{ modx_install_dir }}/modx-{{ modx_version }}/core/');"
  with_items:
    - "{{ modx_install_dir }}/modx-{{ modx_version }}/connectors/config.core.php"
    - "{{ modx_install_dir }}/modx-{{ modx_version }}/config.core.php"
    - "{{ modx_install_dir }}/modx-{{ modx_version }}/manager/config.core.php"
  when: aicura_dump is defined

- name: Start php-fpm Service
  service: name=php7.0-fpm state=started enabled=yes    
  changed_when: false

- name: Clean up MODX installation
  file: path={{ modx_install_dir }}/modx-{{ modx_version }}/setup state=absent
